create database student


create table student
(
sid int primary key identity(1,1),
sname nvarchar(10)not null,
sex nvarchar(1) not null,
class nvarchar(10),
city  nvarchar(10),


)

create table course
(
cid int primary key identity(1,1),
cname nvarchar(10)not null,


)

create table score
(
 eid int primary key identity(1,1),
 score int check(score>=0 and score<=100),
 sid int foreign  key references student(sid),
  cid int foreign  key references course(cid),


)

insert into student values('李静','女','三班','漯河')
insert into student values('照耀','男','三班','信阳')
insert into student values('呼呼','女','三班','漯河')
insert into student values('菲菲','女','三班','漯河')
insert into student values('露露','女','三班','南阳')
insert into student(sname,sex) values('张三','女')
insert into student(sname,sex) values('李四','男')



insert into  course values('java')
insert into  course values('C语言')
insert into  course values('ps')
insert into  course values('html')
insert into  course values('sql')


insert into score values( 89,1,1)
insert into score values( 86,2,1)
insert into score values( 78,3,1)
insert into score values( 89,4,2)
insert into score values( 89,4,1)
insert into score values( 86,5,1)
insert into score values( 78,6,2)
insert into score values( 89,4,3)
insert into score values( 86,5,4)
insert into score values( 78,6,3)

insert into score(sid,cid) values( 5,2)
insert into score(score)values(90)
insert into score(score)values(66)

--查询 李静一个城市的学员信息

select city from student where sname='李静'
select *from student where city=(select city from student where sname='李静')


--查询java成绩最高的学员信息


select  cid from course where  cname='java'

select  top 1 sid from score where cid=(select  cid from course where  cname='java') order by score desc

select *from student where sid=( select  top 1 sid from score where cid=(select  cid from course where  cname='java') order by score desc)


--内连接（显示两个表有关联的部分也就是主表中的主键值在从表中外键列有多少相同的）

select  sname, cid, score from student inner join score on student.sid=score.sid


--左链接（会显示左边表的所有内容  右边的表显示对应的列的值 如果没有对应的则直接写为null）

select  sname, cid, score from student left join score on student.sid=score.sid


--右链接


select  sname, cid, score from student right join score on student.sid=score.sid

--全链接

select  sname, cid, score from student full join score on student.sid=score.sid



--查询所有参加考试的人员的名字 课程名称  以及 分数显示出来

--所有参加考试人员的名称以及 相对应的考试的分数以及考试哪门课
 select  sname,score,cname from student inner join score on student.sid=score.sid inner join course on score.sid=course.cid
 --显示出所有学生考试情况 












create database SuperMarket
on(
name='marketmdf',
filename= 'D:\ SuperMarket.mdf',
size=5MB,
filegrowth=2MB
)
log on(
name='marketldf',
filename= 'D:\ SuperMarket.ldf',
size=2MB,
filegrowth=10%
)

--商品类别表
create table types(
tid int primary key identity(1,1),--类别主键
tnam nvarchar(20) not null unique--类别名称
)


--商品信息表
create table ware(
wid int primary key identity(1,1),--商品主键
tid int foreign key references types(tid),--类别外键
wnam nvarchar(50) not null unique,--商品名称
wcarry decimal(10,2) not null,--商品进价
wprice decimal(10,2) not null,--商品售价
wcnt int not null--库存量
)



--收银员信息表
create table emp(
eid int primary key identity(1001,1),--收银员主键
enam nvarchar(20) not null,--收银员姓名
epwd varchar(20) not null--收银员登录密码
)


--销售员记录表
create table sale(
sid int primary key identity(1,1),--销售记录主键
wid int foreign key references ware(wid),--商品外键
eid int foreign key references emp(eid),--收银员外键
stim nvarchar(20) not null,--销售时间
scnt int not null default 1--销售数量
)


insert into types values('食品')
insert into types values('电器')
insert into types values('日用品')

insert into ware values(1,'香辣豆干',9,14,50)
insert into ware values(2,'空调',1200,2000,50)
insert into ware values(3,'雪碧',2,3,50)
insert into ware values(4,'可乐',2,3,50)
insert into ware values(1,'洗发露',6,15,50)
insert into ware values(3,'牙膏',6,10,50)

insert into emp values('芝麻','111') 
insert into emp values('开门','222') 

insert into sale values(2,1001,'2010-03-09',5)
insert into sale values(4,1001,'2010-11-29',6)
insert into sale values(1,1002,'2010-05-20',3)
insert into sale values(3,1002,'2010-04-12',1)
insert into sale values(2,1002,'2010-07-18',7)
insert into sale values(5,1002,'2010-10-09',6)
insert into sale values(6,1003,'2010-12-09',4)









--查询每件商品的编号 名称  单品利润并排序
select wid,wnam,wprice-wcarry '利润' from ware order by '利润' desc

--统计每件商品的销售量  显示商品名称及销售量 从高到低排
select wnam,SUM(scnt) '销售量' from ware,sale where ware.wid=sale.wid group by wnam order by '销售量' desc

--统计每类商品的销售量，显示商品类型及销售量
select tnam,SUM(scnt) '销售量' from types ,ware,sale where types.tid=ware.tid and ware.wid=sale.wid group by tnam

--统计每种商品目前的盈利总额
select wnam,SUM((wprice-wcarry)*scnt) from ware,sale where ware.wid=sale.wid group by wnam

--收银员1002销售3件1号商品
update ware  set wcnt=wcnt-3 where wid=1
insert into sale values(1,1002,'2017-12-25',3)

--按照销售总额对收银员排序
select enam,SUM((wprice-wcarry)*scnt) '销售总额'from emp,sale,ware where emp.eid=sale.eid and ware.wid=sale.wid group by enam order by '销售总额'desc

--查询商品销售量排在前五名的商品名称及销量
select top 5 wnam,sum(scnt) '销量'from ware,sale where ware.wid=sale.wid group by wnam order by '销量' desc

--查询2010年商品销售量排在前五名的商品名称及销量
select top 5 wnam,SUM(scnt) '销量'from ware,sale where ware.wid=sale.wid  and stim between '2017-1-1' and '2017-12-31' group by wnam order by '销量'  desc





